<?xml version="1.0"?>
<command>
  <name>record-route</name>
  <id>net_node_record-route</id>
  <context>net node</context>
  <parameters>
    <option>
      <name>--capacity</name>
      <description>optionally report the path's capacity</description>
    </option>
    <option>
      <name>--check-loop</name>
      <description>optionally check for forwarding loops</description>
    </option>
    <option>
      <name>--deflection</name>
      <description>optionnaly check for path deflection</description>
    </option>
    <option>
      <name>--delay</name>
      <description>optionnaly report the path's delay</description>
    </option>
    <option>
      <name>--ecmp</name>
      <description>optionally discover ECMP paths</description>
    </option>
    <option>
      <name>--load=</name>
      <description>optionally load the path with a traffic load</description>
    </option>
    <option>
      <name>--tos=</name>
      <description>optionally use a different forwarding plane</description>
    </option>
    <option>
      <name>--ttl=</name>
      <description>optional TTL limit</description>
    </option>
    <option>
      <name>--tunnel</name>
      <description>optionally discover the path within tunnels</description>
    </option>
    <option>
      <name>--weight</name>
      <description>optionally report the path's IGP weight</description>
    </option>
    <parameter>
      <name>address|prefix</name>
      <description>destination address or prefix</description>
    </parameter>
  </parameters>
  <abstract>trace the route from one router to a specific destination</abstract>
  <description>
<p>This command records the addresses of the nodes that packet sent from
the source <arg>address</arg> traverse to reach the
<arg>destination</arg> address. The <arg>destination</arg> may be an IP address or an IP prefix. In the case of an IP address, the trace stops only when a node with the specified address is reached. In the case of an IP prefix, the trace stops as soon as a node with an IP address that matches the specified prefix is reached.
</p>
<p>
Output format:
<code>
&lt;source&gt; &lt;destination&gt; &lt;result&gt; &lt;num-hops&gt; &lt;list of hops&gt; [options]
</code>
</p>
<p>
The value of <arg>result</arg> is one of
<dl>
<dt>SUCCESS</dt><dd>The destination was reachable. In this case, the list of hops is the list of the IP adresses of the traversed nodes.</dd>
<dt>UNREACH</dt><dd>The destination was not reachable. In this case, the list of hops is the list of IP addresses of the nodes traversed until no route was available.</dd>
<dt>TOO_LONG</dt><dd>The path towards the destination was too long (i.e. longer than 30 hops). This is often the symptom of a routing loop.</dd>
<dt>DOWN</dt><dd>there was a route to reach the destination, but a link down was found on the way. This indicates a misconfiguration or routing error. This can however occur in transient states, after a link has been brought down and the routing has not reconverged. The last node in the list of hops indicates the node adjacent to the failing link.</dd>
<dt>LOOP</dt><dd>If the option <arg>--check-loop</arg> has been specified and a forwarding loop is found, then this status is reported.</dd>
<dt>TUNNEL_UNREACH</dt><dd>The path went through a tunnel but the tunnel end-point does not support the IP-in-IP protocol. Consider using the <cmd><name>net node ipip-enable</name><link>net_node_ipip-enable</link></cmd>. The last node in the list of hops is the address of the faulty node.</dd>
<dt>TUNNEL_BROKEN</dt><dd>The path went through a tunnel but at a point the tunnel end-point was not reachable. The last node in the list of hops is the address of the faulty node.</dd>
</dl>
</p>
<p>
Example:
<code>
cbgp&gt; net node 1.0.0.1 record-route 1.0.0.2<br/>
1.0.0.1 1.0.0.2 SUCCESS 3       1.0.0.1 1.0.0.3 1.0.0.2<br/>
cbgp&gt;
</code>
</p>
<p>Here is another example that traces all the equal-cost paths (ECMP) between two nodes:
<code>cbgp&gt; net node 1.0.0.0 record-route --ecmp 1.0.0.4<br/>
1.0.0.0 1.0.0.4 SUCCESS 4       1.0.0.0 1.0.0.1 1.0.0.3 1.0.0.4<br/>
1.0.0.0 1.0.0.4 SUCCESS 4       1.0.0.0 1.0.0.1 1.0.0.3 1.0.0.4<br/>
cbgp&gt;
</code>
</p>
  </description>
  <bugs>
<p>
IMPORTANT NOTE: due to changes in the network topology data structure and in the way tunnels are handled, the tunnel tracing feature is currently broken. Tracing route through tunnels is therefore temporarily disabled.
</p>
  </bugs>  
  <see-also>
<p>See also commands <cmd><name>ping</name><link>net_node_ping</link></cmd> and <cmd><name>traceroute</name><link>net_node_traceroute</link></cmd> for alternative ways to check the reachability of nodes.</p>
  </see-also>
</command>
